{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "String"
        },
        "StorageAccount.Name": {
            "type": "String"
        },
        "LogAnalytics.Workspace.Name": {
            "type": "String"
        },
        "AppInsights.Name": {
            "type": "String"
        },
        "ContainerApps.Environment.Name": {
            "type": "String"
        },
        "ContainerApps.HttpApi.CurrentRevisionName": {
            "type": "String"
        },
        "ContainerApps.HttpApi.NewRevisionName": {
            "type": "String"
        }
    },
    "variables": {
        "StorageAccount.ApiVersion": "2018-07-01",
        "StorageAccount.Queue.Name": "demoqueue",
        "ContainerApps.Environment.Id": "[resourceId('Microsoft.App/managedEnvironments/', parameters('ContainerApps.Environment.Name'))]",
        "Workspace.Resource.Id": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('LogAnalytics.Workspace.Name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[parameters('StorageAccount.Name')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-01-01",
            "name": "[concat(parameters('StorageAccount.Name'), '/default/', variables('StorageAccount.Queue.Name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('LogAnalytics.Workspace.Name')]",
            "apiVersion": "2020-08-01",
            "location": "[parameters('Location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "searchVersion": 1,
                    "legacy": 0,
                    "enableLogAccessUsingOnlyResourcePermissions": true
                }
            }
        },
        {
            "name": "[parameters('AppInsights.Name')]",
            "type": "Microsoft.Insights/Components",
            "location": "[parameters('Location')]",
            "apiVersion": "2020-02-02",
            "properties": {
                "ApplicationId": "[parameters('AppInsights.Name')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "CustomDeployment"
            }
        },
        {
            "type": "Microsoft.App/managedEnvironments",
            "apiVersion": "2022-03-01",
            "name": "[parameters('ContainerApps.Environment.Name')]",
            "location": "[parameters('Location')]",
            "tags": {},
            "properties": {
                "type": "managed",
                "appLogsConfiguration": {
                    "destination": "log-analytics",
                    "logAnalyticsConfiguration": {
                        "customerId": "[reference(variables('Workspace.Resource.Id'), '2015-11-01-preview').customerId]",
                        "sharedKey": "[listKeys(variables('Workspace.Resource.Id'), '2015-03-20').primarySharedKey]"
                    }
                },
                "daprAIInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('AppInsights.Name')), '2020-02-02', 'Full').properties.InstrumentationKey]"
            },
            "dependsOn": [
                "[variables('Workspace.Resource.Id')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name'))]"
            ]
        },
        {
            "name": "queuereader",
            "type": "Microsoft.App/containerApps",
            "apiVersion": "2022-03-01",
            "kind": "containerapp",
            "location": "[parameters('Location')]",
            "properties": {
                "managedEnvironmentId": "[variables('ContainerApps.Environment.Id')]",
                "configuration": {
                    "activeRevisionsMode": "single",
                    "secrets": [
                    {
                        "name": "queueconnection",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccount.Name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name')), variables('StorageAccount.ApiVersion')).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                    }],
                    "dapr": {
                        "enabled": true,
                        "appId": "queuereader"
                    }
                },
                "template": {
                    "containers": [
                        {
                            "image": "kevingbb/queuereader:v2",
                            "name": "queuereader",
                            "env": [
                                {
                                    "name": "QueueName",
                                    "value": "demoqueue"
                                },
                                {
                                    "name": "QueueConnectionString",
                                    "secretref": "queueconnection"
                                },
                                {
                                    "name": "TargetApp",
                                    "value": "storeapp"
                                }
                            ]
                        }
                    ],
                    "scale": {
                        "minReplicas": 1,
                        "maxReplicas": 2,
                        "rules": [
                            {
                                "name": "myqueuerule",
                                "azureQueue": {
                                    "queueName": "demoqueue",
                                    "queueLength": 10,
                                    "auth": [
                                        {
                                            "secretRef": "queueconnection",
                                            "triggerParameter": "connection"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[variables('ContainerApps.Environment.Id')]"
            ]
        },
        {
            "name": "storeapp",
            "type": "Microsoft.App/containerApps",
            "apiVersion": "2022-03-01",
            "kind": "containerapp",
            "location": "[parameters('Location')]",
            "properties": {
                "managedEnvironmentId": "[variables('ContainerApps.Environment.Id')]",
                "configuration": {
                    "ingress": {
                        "external": true,
                        "targetPort": 3000
                    },
                    "dapr": {
                        "enabled": true,
                        "appId": "storeapp",
                        "appProcotol": "http",
                        "appPort": 3000
                    }
                },
                "template": {
                    "containers": [
                        {
                            "image": "kevingbb/storeapp:v1",
                            "name": "storeapp"
                        }
                    ],
                    "scale": {
                        "minReplicas": 1,
                        "maxReplicas": 1,
                        "rules": []
                    }
                }
            },
            "dependsOn": [
                "[variables('ContainerApps.Environment.Id')]"
            ]
        },
        {
            "name": "httpapi",
            "type": "Microsoft.App/containerApps",
            "apiVersion": "2022-03-01",
            "kind": "containerapp",
            "location": "[parameters('Location')]",
            "properties": {
                "managedEnvironmentId": "[variables('ContainerApps.Environment.Id')]",
                "configuration": {
                    "activeRevisionsMode": "multiple",
                    "ingress": {
                        "external": true,
                        "targetPort": 80,
                        "traffic":[
                            {
                                "revisionName": "[concat('httpapi--', parameters('ContainerApps.HttpApi.CurrentRevisionName'))]",
                                "weight": 80
                            },
                            {
                                "latestRevision": true,
                                "weight": 20
                            }
                        ]
                    },
                    "secrets": [
                    {
                        "name": "queueconnection",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccount.Name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name')), variables('StorageAccount.ApiVersion')).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                    }],
                    "dapr": {
                        "enabled": false
                    }
                },
                "template": {
                    "revisionSuffix": "[parameters('ContainerApps.HttpApi.NewRevisionName')]",
                    "containers": [
                        {
                            "image": "kevingbb/httpapiapp:v2",
                            "name": "httpapi",
                            "env": [
                                {
                                    "name": "QueueName",
                                    "value": "demoqueue"
                                },
                                {
                                    "name": "QueueConnectionString",
                                    "secretref": "queueconnection"
                                }
                            ]
                        }
                    ],
                    "scale": {
                        "minReplicas": 1,
                        "maxReplicas": 2,
                        "rules": [
                            {
                                "name": "httpscalingrule",
                                "http": {
                                    "metadata": {
                                        "concurrentRequests": "10"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[variables('ContainerApps.Environment.Id')]"
            ]
        }
    ]
}
